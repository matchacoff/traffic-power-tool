# src/core/config.py

from dataclasses import dataclass, field
from pathlib import Path
from typing import Any, Optional
import random

DEFAULT_REFERRER_SOURCES = [
    "https://www.google.com/",
    "https://www.bing.com/",
    "https://duckduckgo.com/",
    "https://t.co/",
    "https://www.facebook.com/",
    "https://linkedin.com/",
    "https://reddit.com/",
    "https://news.ycombinator.com/",
    "https://medium.com/",
    "https://www.youtube.com/",
    "https://www.instagram.com/",
    "https://www.pinterest.com/",
    "https://www.tiktok.com/",
    "https://twitter.com/",
    "https://mail.google.com/",
    "https://outlook.live.com/",
    "https://web.whatsapp.com/",
    "https://l.instagram.com/",
    "https://www.baidu.com/",
    "https://www.yahoo.com/",
    "https://www.naver.com/",
    "https://www.yandex.ru/",
    "https://www.qq.com/",
    "https://www.weibo.com/",
]

# Enhanced international country distribution with realistic weights
INTERNATIONAL_COUNTRIES = {
    "United States": 25,
    "Indonesia": 15,
    "India": 12,
    "China": 10,
    "Brazil": 8,
    "United Kingdom": 7,
    "Germany": 6,
    "Japan": 6,
    "France": 5,
    "Canada": 5,
    "Australia": 4,
    "Mexico": 4,
    "Spain": 4,
    "Italy": 3,
    "South Korea": 3,
    "Russia": 3,
    "Netherlands": 3,
    "Turkey": 3,
    "Poland": 2,
    "Argentina": 2,
    "Colombia": 2,
    "Thailand": 2,
    "Malaysia": 2,
    "Singapore": 2,
    "Philippines": 2,
    "Vietnam": 2,
    "Egypt": 2,
    "South Africa": 2,
    "Nigeria": 2,
    "Kenya": 1,
    "Morocco": 1,
    "Algeria": 1,
    "Tunisia": 1,
    "Ghana": 1,
    "Ethiopia": 1,
    "Uganda": 1,
    "Tanzania": 1,
    "Zimbabwe": 1,
    "Botswana": 1,
    "Namibia": 1,
    "Zambia": 1,
    "Malawi": 1,
    "Mozambique": 1,
    "Angola": 1,
    "Congo": 1,
    "Cameroon": 1,
    "Ivory Coast": 1,
    "Senegal": 1,
    "Mali": 1,
    "Burkina Faso": 1,
    "Niger": 1,
    "Chad": 1,
    "Sudan": 1,
    "Somalia": 1,
    "Djibouti": 1,
    "Eritrea": 1,
    "Libya": 1,
    "Central African Republic": 1,
    "Gabon": 1,
    "Equatorial Guinea": 1,
    "São Tomé and Príncipe": 1,
    "Cape Verde": 1,
    "Guinea-Bissau": 1,
    "Guinea": 1,
    "Sierra Leone": 1,
    "Liberia": 1,
    "Togo": 1,
    "Benin": 1,
    "Mauritania": 1,
    "Western Sahara": 1,
    "Comoros": 1,
    "Madagascar": 1,
    "Mauritius": 1,
    "Seychelles": 1,
    "Réunion": 1,
    "Mayotte": 1,
    "Saint Helena": 1,
    "Ascension Island": 1,
    "Tristan da Cunha": 1,
    "Falkland Islands": 1,
    "South Georgia": 1,
    "South Sandwich Islands": 1,
    "Bouvet Island": 1,
    "Heard Island": 1,
    "McDonald Islands": 1,
    "French Southern Territories": 1,
    "British Indian Ocean Territory": 1,
    "Christmas Island": 1,
    "Cocos Islands": 1,
    "Norfolk Island": 1,
    "Pitcairn Islands": 1,
    "Tokelau": 1,
    "Niue": 1,
    "Cook Islands": 1,
    "Wallis and Futuna": 1,
    "French Polynesia": 1,
    "New Caledonia": 1,
    "Vanuatu": 1,
    "Solomon Islands": 1,
    "Papua New Guinea": 1,
    "Fiji": 1,
    "Tonga": 1,
    "Samoa": 1,
    "American Samoa": 1,
    "Guam": 1,
    "Northern Mariana Islands": 1,
    "Micronesia": 1,
    "Marshall Islands": 1,
    "Palau": 1,
    "Nauru": 1,
    "Kiribati": 1,
    "Tuvalu": 1,
    "New Zealand": 3,
    "Iceland": 1,
    "Norway": 2,
    "Sweden": 2,
    "Finland": 2,
    "Denmark": 2,
    "Estonia": 1,
    "Latvia": 1,
    "Lithuania": 1,
    "Belarus": 1,
    "Ukraine": 2,
    "Moldova": 1,
    "Romania": 2,
    "Bulgaria": 1,
    "Greece": 2,
    "Albania": 1,
    "North Macedonia": 1,
    "Kosovo": 1,
    "Serbia": 1,
    "Montenegro": 1,
    "Bosnia and Herzegovina": 1,
    "Croatia": 1,
    "Slovenia": 1,
    "Hungary": 1,
    "Slovakia": 1,
    "Czech Republic": 1,
    "Austria": 2,
    "Switzerland": 2,
    "Liechtenstein": 1,
    "Luxembourg": 1,
    "Belgium": 2,
    "Ireland": 2,
    "Portugal": 2,
    "Andorra": 1,
    "Monaco": 1,
    "San Marino": 1,
    "Vatican City": 1,
    "Malta": 1,
    "Cyprus": 1,
    "Israel": 2,
    "Palestine": 1,
    "Lebanon": 1,
    "Syria": 1,
    "Jordan": 1,
    "Iraq": 1,
    "Kuwait": 1,
    "Saudi Arabia": 2,
    "Yemen": 1,
    "Oman": 1,
    "United Arab Emirates": 2,
    "Qatar": 1,
    "Bahrain": 1,
    "Iran": 2,
    "Afghanistan": 1,
    "Pakistan": 3,
    "Bangladesh": 3,
    "Sri Lanka": 1,
    "Maldives": 1,
    "Nepal": 1,
    "Bhutan": 1,
    "Myanmar": 1,
    "Laos": 1,
    "Cambodia": 1,
    "Brunei": 1,
    "East Timor": 1,
    "Mongolia": 1,
    "Kazakhstan": 1,
    "Uzbekistan": 1,
    "Kyrgyzstan": 1,
    "Tajikistan": 1,
    "Turkmenistan": 1,
    "Azerbaijan": 1,
    "Georgia": 1,
    "Armenia": 1,
    "Kuwait": 1,
    "Bahrain": 1,
    "Qatar": 1,
    "United Arab Emirates": 2,
    "Oman": 1,
    "Yemen": 1,
    "Saudi Arabia": 2,
    "Jordan": 1,
    "Iraq": 1,
    "Syria": 1,
    "Lebanon": 1,
    "Israel": 2,
    "Palestine": 1,
    "Cyprus": 1,
    "Malta": 1,
    "Vatican City": 1,
    "San Marino": 1,
    "Monaco": 1,
    "Andorra": 1,
    "Portugal": 2,
    "Ireland": 2,
    "Belgium": 2,
    "Luxembourg": 1,
    "Liechtenstein": 1,
    "Switzerland": 2,
    "Austria": 2,
    "Czech Republic": 1,
    "Slovakia": 1,
    "Hungary": 1,
    "Slovenia": 1,
    "Croatia": 1,
    "Bosnia and Herzegovina": 1,
    "Montenegro": 1,
    "Serbia": 1,
    "Kosovo": 1,
    "North Macedonia": 1,
    "Albania": 1,
    "Greece": 2,
    "Bulgaria": 1,
    "Romania": 2,
    "Moldova": 1,
    "Ukraine": 2,
    "Belarus": 1,
    "Lithuania": 1,
    "Latvia": 1,
    "Estonia": 1,
    "Denmark": 2,
    "Finland": 2,
    "Sweden": 2,
    "Norway": 2,
    "Iceland": 1,
    "New Zealand": 3,
    "Tuvalu": 1,
    "Kiribati": 1,
    "Nauru": 1,
    "Palau": 1,
    "Marshall Islands": 1,
    "Micronesia": 1,
    "Northern Mariana Islands": 1,
    "Guam": 1,
    "American Samoa": 1,
    "Samoa": 1,
    "Tonga": 1,
    "Fiji": 1,
    "Papua New Guinea": 1,
    "Solomon Islands": 1,
    "Vanuatu": 1,
    "New Caledonia": 1,
    "French Polynesia": 1,
    "Wallis and Futuna": 1,
    "Cook Islands": 1,
    "Niue": 1,
    "Tokelau": 1,
    "Pitcairn Islands": 1,
    "Norfolk Island": 1,
    "Cocos Islands": 1,
    "Christmas Island": 1,
    "British Indian Ocean Territory": 1,
    "French Southern Territories": 1,
    "McDonald Islands": 1,
    "Heard Island": 1,
    "Bouvet Island": 1,
    "South Sandwich Islands": 1,
    "South Georgia": 1,
    "Falkland Islands": 1,
    "Tristan da Cunha": 1,
    "Ascension Island": 1,
    "Saint Helena": 1,
    "Mayotte": 1,
    "Réunion": 1,
    "Seychelles": 1,
    "Mauritius": 1,
    "Madagascar": 1,
    "Comoros": 1,
    "Western Sahara": 1,
    "Mauritania": 1,
    "Benin": 1,
    "Togo": 1,
    "Liberia": 1,
    "Sierra Leone": 1,
    "Guinea": 1,
    "Guinea-Bissau": 1,
    "Cape Verde": 1,
    "São Tomé and Príncipe": 1,
    "Equatorial Guinea": 1,
    "Gabon": 1,
    "Central African Republic": 1,
    "Libya": 1,
    "Eritrea": 1,
    "Djibouti": 1,
    "Somalia": 1,
    "Sudan": 1,
    "Chad": 1,
    "Niger": 1,
    "Burkina Faso": 1,
    "Mali": 1,
    "Senegal": 1,
    "Ivory Coast": 1,
    "Cameroon": 1,
    "Congo": 1,
    "Angola": 1,
    "Mozambique": 1,
    "Malawi": 1,
    "Zambia": 1,
    "Namibia": 1,
    "Botswana": 1,
    "Zimbabwe": 1,
    "Tanzania": 1,
    "Uganda": 1,
    "Ethiopia": 1,
    "Ghana": 1,
    "Tunisia": 1,
    "Algeria": 1,
    "Morocco": 1,
    "Kenya": 1,
    "Nigeria": 2,
    "South Africa": 2,
    "Egypt": 2,
    "Vietnam": 2,
    "Philippines": 2,
    "Singapore": 2,
    "Malaysia": 2,
    "Thailand": 2,
    "Colombia": 2,
    "Argentina": 2,
    "Poland": 2,
    "Turkey": 3,
    "Netherlands": 3,
    "Russia": 3,
    "South Korea": 3,
    "Italy": 3,
    "Spain": 4,
    "Mexico": 4,
    "Australia": 4,
    "Canada": 5,
    "France": 5,
    "Japan": 6,
    "Germany": 6,
    "United Kingdom": 7,
    "Brazil": 8,
    "China": 10,
    "India": 12,
    "Indonesia": 15,
    "United States": 25,
}

@dataclass
class Persona:
    name: str
    goal_keywords: dict[str, int] = field(default_factory=dict)
    generic_keywords: dict[str, int] = field(default_factory=dict)
    navigation_depth: tuple[int, int] = (3, 6)
    avg_time_per_page: tuple[int, int] = (20, 60)
    gender: str = "Neutral"
    age_range: tuple[int, int] = (18, 65)  # Default age range
    can_fill_forms: bool = False
    goal: Optional[dict[str, Any]] = None
    scroll_probability: float = 0.85
    form_interaction_probability: float = 0.25
    country_preference: Optional[str] = None  # New field for country preference
    language_preference: Optional[str] = None  # New field for language preference

@dataclass
class TrafficConfig:
    project_root: Path
    target_url: str
    total_sessions: int
    max_concurrent: int
    headless: bool = True
    proxy_file: Optional[str] = None
    returning_visitor_rate: int = 30
    navigation_timeout: int = 60000
    max_retries_per_session: int = 2
    personas: list[Persona] = field(default_factory=list)
    gender_distribution: dict[str, int] = field(default_factory=lambda: {"Male": 50, "Female": 50})
    device_distribution: dict[str, int] = field(default_factory=lambda: {"Desktop": 60, "Mobile": 30, "Tablet": 10})
    country_distribution: dict[str, int] = field(default_factory=lambda: INTERNATIONAL_COUNTRIES)  # Use international countries
    age_distribution: dict[str, int] = field(default_factory=lambda: {"18-24": 20, "25-34": 30, "35-44": 25, "45-54": 15, "55+": 10})
    referrer_sources: list[str] = field(default_factory=lambda: DEFAULT_REFERRER_SOURCES)
    session_duration_range: tuple[int, int] = (120, 600)
    bounce_rate_target: float = 0.3
    user_agent_strategy: str = "random"
    network_type: str = "Default"
    mode_type: str = "Bot"
    schedule_time: Optional[str] = None
    enable_random_personas: bool = True  # New field for random persona generation
    random_persona_count: int = 5  # Number of random personas to generate
    enable_geolocation_simulation: bool = True  # New field for geolocation simulation
    enable_language_detection: bool = True  # New field for language detection

DEFAULT_PERSONAS = [
    Persona(
        name="Methodical Customer",
        goal_keywords={"contact": 10, "price": 10, "demo": 9, "signup": 8, "form": 7},
        generic_keywords={"faq": 6, "testimonial": 7, "about us": 5},
        navigation_depth=(4, 7),
        avg_time_per_page=(40, 75),
        can_fill_forms=True,
        goal={"type": "fill_form", "target_selector": "form#contact-form, form[name*='contact'], form[class*='contact']"},
    ),
    Persona(
        name="Deep Researcher",
        goal_keywords={"whitepaper": 12, "case study": 12, "report": 10, "data": 9, "analisa": 8},
        generic_keywords={"blog": 5, "resources": 8, "library": 7, "artikel": 6},
        navigation_depth=(6, 10),
        avg_time_per_page=(50, 90),
        can_fill_forms=False,
        goal={"type": "find_and_click", "target_text": "download|unduh|get now", "case_sensitive": False},
    ),
    Persona(
        name="Performance Analyst",
        goal_keywords={"home": 10, "about": 8, "products": 9, "blog": 7, "kinerja": 11},
        generic_keywords={"news": 5, "contact": 6, "statistik": 7},
        navigation_depth=(5, 8),
        avg_time_per_page=(10, 20),
        can_fill_forms=False,
        goal={"type": "collect_web_vitals", "pages_to_visit": 5, "min_vitals_to_collect": 3},
    ),
    Persona(
        name="Quick Browser",
        goal_keywords={"home": 8, "products": 7, "services": 6},
        generic_keywords={"blog": 3, "news": 4},
        navigation_depth=(2, 4),
        avg_time_per_page=(15, 30),
        can_fill_forms=False,
        goal=None,
    ),
    Persona(
        name="Job Seeker",
        goal_keywords={"career": 12, "job": 10, "hiring": 9, "lowongan": 11, "vacancies": 9},
        generic_keywords={"about": 6, "company": 8, "team": 7},
        navigation_depth=(6, 10),
        avg_time_per_page=(45, 90),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "apply|daftar sekarang|lamar", "case_sensitive": False},
    ),
    Persona(
        name="Content Consumer",
        goal_keywords={"artikel": 10, "berita": 9, "blog": 8, "panduan": 7, "video": 6},
        generic_keywords={"category": 5, "tag": 4, "author": 3, "media": 5},
        navigation_depth=(5, 8),
        avg_time_per_page=(60, 120),
        can_fill_forms=False,
        goal=None,
    ),
    Persona(
        name="Product Explorer",
        goal_keywords={"product": 10, "fitur": 9, "harga": 8, "buy": 7, "beli": 7},
        generic_keywords={"review": 6, "galeri": 5, "spec": 4},
        navigation_depth=(3, 6),
        avg_time_per_page=(30, 90),
        can_fill_forms=False,
        goal={"type": "find_and_click", "target_text": "add to cart|beli sekarang", "case_sensitive": False},
    ),
    Persona(
        name="Social Media Marketer",
        goal_keywords={"share": 10, "social": 9, "twitter": 8, "facebook": 8, "instagram": 8, "like": 7, "follow": 7},
        generic_keywords={"campaign": 6, "ads": 5, "influencer": 5},
        navigation_depth=(3, 6),
        avg_time_per_page=(20, 40),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "share|bagikan|like|follow", "case_sensitive": False},
        gender="Female",
    ),
    Persona(
        name="Mobile Gamer",
        goal_keywords={"game": 12, "play": 10, "download": 9, "score": 8, "leaderboard": 7},
        generic_keywords={"review": 5, "update": 4, "event": 4},
        navigation_depth=(2, 5),
        avg_time_per_page=(30, 60),
        can_fill_forms=False,
        goal={"type": "find_and_click", "target_text": "play now|main sekarang|download", "case_sensitive": False},
        gender="Male",
    ),
    Persona(
        name="News Reader",
        goal_keywords={"news": 12, "headline": 10, "breaking": 9, "update": 8, "artikel": 7},
        generic_keywords={"opini": 5, "kolom": 4, "editorial": 4},
        navigation_depth=(5, 10),
        avg_time_per_page=(40, 90),
        can_fill_forms=False,
        goal=None,
        gender="Neutral",
    ),
    Persona(
        name="Tech Enthusiast",
        goal_keywords={"gadget": 10, "review": 9, "spec": 8, "launch": 7, "update": 7, "technology": 8},
        generic_keywords={"forum": 5, "komunitas": 4, "event": 4},
        navigation_depth=(4, 8),
        avg_time_per_page=(30, 70),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "review|spec|forum|komunitas", "case_sensitive": False},
        gender="Male",
    ),
    
    # NEW PERSONAS ADDED BELOW
    Persona(
        name="E-commerce Shopper",
        goal_keywords={"shop": 12, "cart": 10, "checkout": 9, "sale": 8, "discount": 8, "promo": 7},
        generic_keywords={"kategori": 6, "brand": 5, "wishlist": 4},
        navigation_depth=(3, 7),
        avg_time_per_page=(25, 80),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "buy now|beli|add to cart|checkout", "case_sensitive": False},
        gender="Female",
        scroll_probability=0.9,
        form_interaction_probability=0.4,
    ),
    
    Persona(
        name="Educational Student",
        goal_keywords={"course": 12, "tutorial": 11, "learn": 10, "education": 9, "skill": 8, "training": 7},
        generic_keywords={"certificate": 6, "instructor": 5, "syllabus": 4},
        navigation_depth=(5, 12),
        avg_time_per_page=(60, 180),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "enroll|daftar|register|start course", "case_sensitive": False},
        gender="Neutral",
        scroll_probability=0.95,
    ),
    
    Persona(
        name="Health Seeker",
        goal_keywords={"health": 12, "medical": 10, "doctor": 9, "hospital": 8, "treatment": 7, "appointment": 6},
        generic_keywords={"symptoms": 5, "medicine": 4, "clinic": 4},
        navigation_depth=(4, 8),
        avg_time_per_page=(45, 120),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "book appointment|konsultasi|contact doctor", "case_sensitive": False},
        gender="Female",
        scroll_probability=0.8,
    ),
    
    Persona(
        name="Investment Researcher",
        goal_keywords={"invest": 12, "stock": 11, "finance": 10, "trading": 9, "portfolio": 8, "market": 7},
        generic_keywords={"analysis": 6, "chart": 5, "profit": 5, "risk": 4},
        navigation_depth=(6, 15),
        avg_time_per_page=(90, 300),
        can_fill_forms=False,
        goal={"type": "collect_web_vitals", "pages_to_visit": 8, "min_vitals_to_collect": 5},
        gender="Male",
        scroll_probability=0.9,
    ),
    
    Persona(
        name="Food Enthusiast",
        goal_keywords={"recipe": 12, "food": 11, "restaurant": 10, "menu": 9, "cooking": 8, "delivery": 7},
        generic_keywords={"ingredient": 6, "chef": 5, "cuisine": 4},
        navigation_depth=(3, 6),
        avg_time_per_page=(30, 90),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "order now|pesan|reserve|book table", "case_sensitive": False},
        gender="Female",
        scroll_probability=0.85,
    ),
    
    Persona(
        name="Travel Planner",
        goal_keywords={"travel": 12, "hotel": 11, "flight": 10, "destination": 9, "vacation": 8, "tour": 7},
        generic_keywords={"itinerary": 6, "guide": 5, "photo": 4, "review": 5},
        navigation_depth=(4, 10),
        avg_time_per_page=(40, 120),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "book now|reserve|pesan tiket", "case_sensitive": False},
        gender="Neutral",
        scroll_probability=0.9,
    ),
    
    Persona(
        name="Real Estate Buyer",
        goal_keywords={"property": 12, "house": 11, "apartment": 10, "price": 9, "location": 8, "mortgage": 7},
        generic_keywords={"bedroom": 5, "bathroom": 4, "area": 5, "neighborhood": 4},
        navigation_depth=(5, 12),
        avg_time_per_page=(60, 180),
        can_fill_forms=True,
        goal={"type": "fill_form", "target_selector": "form#contact-agent, form[name*='inquiry'], form[class*='property']"},
        gender="Male",
        scroll_probability=0.95,
    ),
    
    Persona(
        name="Fitness Tracker",
        goal_keywords={"fitness": 12, "workout": 11, "gym": 10, "exercise": 9, "diet": 8, "nutrition": 7},
        generic_keywords={"muscle": 5, "cardio": 4, "protein": 4, "calories": 5},
        navigation_depth=(3, 7),
        avg_time_per_page=(25, 75),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "join now|start workout|subscribe", "case_sensitive": False},
        gender="Male",
        scroll_probability=0.8,
    ),
    
    Persona(
        name="Beauty Consultant",
        goal_keywords={"beauty": 12, "skincare": 11, "makeup": 10, "cosmetic": 9, "treatment": 8, "salon": 7},
        generic_keywords={"brand": 6, "review": 5, "tutorial": 4, "tips": 5},
        navigation_depth=(4, 8),
        avg_time_per_page=(35, 90),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "buy now|shop|add to cart|book appointment", "case_sensitive": False},
        gender="Female",
        scroll_probability=0.9,
    ),
    
    Persona(
        name="Legal Advisor",
        goal_keywords={"legal": 12, "lawyer": 11, "law": 10, "consultation": 9, "advice": 8, "court": 7},
        generic_keywords={"case": 6, "document": 5, "contract": 4, "rights": 5},
        navigation_depth=(5, 10),
        avg_time_per_page=(60, 150),
        can_fill_forms=True,
        goal={"type": "fill_form", "target_selector": "form#consultation, form[name*='legal'], form[class*='contact']"},
        gender="Neutral",
        scroll_probability=0.85,
    ),
    
    Persona(
        name="Automotive Buyer",
        goal_keywords={"car": 12, "motor": 11, "vehicle": 10, "dealer": 9, "price": 8, "financing": 7},
        generic_keywords={"engine": 5, "fuel": 4, "brand": 5, "model": 6},
        navigation_depth=(4, 9),
        avg_time_per_page=(45, 120),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "test drive|quote|contact dealer", "case_sensitive": False},
        gender="Male",
        scroll_probability=0.8,
    ),
    
    Persona(
        name="Entertainment Seeker",
        goal_keywords={"movie": 12, "music": 11, "concert": 10, "event": 9, "ticket": 8, "show": 7},
        generic_keywords={"artist": 6, "venue": 5, "schedule": 4, "genre": 4},
        navigation_depth=(3, 6),
        avg_time_per_page=(20, 60),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "buy ticket|book now|stream|watch", "case_sensitive": False},
        gender="Neutral",
        scroll_probability=0.75,
    ),
    
    Persona(
        name="Pet Owner",
        goal_keywords={"pet": 12, "dog": 10, "cat": 10, "veterinary": 9, "food": 8, "care": 7},
        generic_keywords={"breed": 5, "health": 6, "training": 4, "toy": 4},
        navigation_depth=(3, 7),
        avg_time_per_page=(30, 80),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "shop|order|appointment|consult", "case_sensitive": False},
        gender="Female",
        scroll_probability=0.85,
    ),
    
    Persona(
        name="Financial Advisor",
        goal_keywords={"insurance": 12, "loan": 11, "credit": 10, "bank": 9, "savings": 8, "budget": 7},
        generic_keywords={"rate": 6, "calculator": 5, "plan": 5, "advisor": 4},
        navigation_depth=(5, 12),
        avg_time_per_page=(50, 140),
        can_fill_forms=True,
        goal={"type": "fill_form", "target_selector": "form#application, form[name*='loan'], form[class*='finance']"},
        gender="Male",
        scroll_probability=0.9,
    ),
    
    Persona(
        name="Home Improvement",
        goal_keywords={"renovation": 12, "contractor": 11, "design": 10, "furniture": 9, "interior": 8, "decor": 7},
        generic_keywords={"material": 6, "budget": 5, "style": 4, "room": 5},
        navigation_depth=(4, 8),
        avg_time_per_page=(40, 100),
        can_fill_forms=True,
        goal={"type": "find_and_click", "target_text": "quote|estimate|contact|buy", "case_sensitive": False},
        gender="Neutral",
        scroll_probability=0.9,
    ),
]

def generate_random_personas(count: int = 5, countries: list = None) -> list[Persona]:
    """
    Generate random personas with international characteristics.
    
    Args:
        count: Number of random personas to generate
        countries: List of countries to choose from (if None, uses all international countries)
    
    Returns:
        List of randomly generated Persona objects
    """
    if countries is None:
        countries = list(INTERNATIONAL_COUNTRIES.keys())
    
    # Define persona templates for different types
    persona_templates = [
        {
            "name_prefixes": ["Global", "International", "Worldwide", "Cross-border", "Multi-national"],
            "name_suffixes": ["Explorer", "Traveler", "Researcher", "Analyst", "Consumer", "Professional"],
            "goal_keywords": {
                "global": 10, "international": 9, "worldwide": 8, "cross-border": 7,
                "multi-national": 6, "overseas": 5, "foreign": 4, "export": 3
            },
            "generic_keywords": {
                "services": 6, "solutions": 5, "partnership": 4, "network": 3
            },
            "navigation_depth": (4, 8),
            "avg_time_per_page": (30, 90),
            "can_fill_forms": True,
            "scroll_probability": 0.9,
            "form_interaction_probability": 0.4
        },
        {
            "name_prefixes": ["Digital", "Online", "Virtual", "Remote", "Cloud"],
            "name_suffixes": ["Nomad", "Worker", "Entrepreneur", "Consultant", "Freelancer"],
            "goal_keywords": {
                "remote": 10, "digital": 9, "online": 8, "virtual": 7,
                "cloud": 6, "telecommute": 5, "work-from-home": 4
            },
            "generic_keywords": {
                "tools": 6, "platform": 5, "software": 4, "technology": 3
            },
            "navigation_depth": (3, 7),
            "avg_time_per_page": (20, 60),
            "can_fill_forms": True,
            "scroll_probability": 0.85,
            "form_interaction_probability": 0.5
        },
        {
            "name_prefixes": ["Cultural", "Local", "Regional", "Native", "Indigenous"],
            "name_suffixes": ["Enthusiast", "Collector", "Researcher", "Explorer", "Admirer"],
            "goal_keywords": {
                "culture": 10, "local": 9, "traditional": 8, "heritage": 7,
                "custom": 6, "artisan": 5, "handmade": 4
            },
            "generic_keywords": {
                "art": 6, "craft": 5, "tradition": 4, "history": 3
            },
            "navigation_depth": (5, 10),
            "avg_time_per_page": (40, 120),
            "can_fill_forms": False,
            "scroll_probability": 0.95,
            "form_interaction_probability": 0.2
        },
        {
            "name_prefixes": ["Tech", "Innovation", "Startup", "Entrepreneurial", "Disruptive"],
            "name_suffixes": ["Innovator", "Pioneer", "Visionary", "Creator", "Developer"],
            "goal_keywords": {
                "innovation": 10, "startup": 9, "technology": 8, "disruptive": 7,
                "pioneering": 6, "cutting-edge": 5, "next-gen": 4
            },
            "generic_keywords": {
                "funding": 6, "investment": 5, "accelerator": 4, "incubator": 3
            },
            "navigation_depth": (6, 12),
            "avg_time_per_page": (50, 150),
            "can_fill_forms": True,
            "scroll_probability": 0.9,
            "form_interaction_probability": 0.6
        },
        {
            "name_prefixes": ["Eco", "Green", "Sustainable", "Environmental", "Climate"],
            "name_suffixes": ["Activist", "Advocate", "Conscious", "Responsible", "Aware"],
            "goal_keywords": {
                "sustainable": 10, "eco-friendly": 9, "green": 8, "environmental": 7,
                "climate": 6, "renewable": 5, "organic": 4
            },
            "generic_keywords": {
                "certification": 6, "impact": 5, "responsibility": 4, "future": 3
            },
            "navigation_depth": (4, 9),
            "avg_time_per_page": (35, 100),
            "can_fill_forms": True,
            "scroll_probability": 0.88,
            "form_interaction_probability": 0.45
        }
    ]
    
    random_personas = []
    
    for i in range(count):
        template = random.choice(persona_templates)
        prefix = random.choice(template["name_prefixes"])
        suffix = random.choice(template["name_suffixes"])
        name = f"{prefix} {suffix}"
        
        # Randomly select a country
        country = random.choice(countries)
        
        # Generate language preference based on country
        language_map = {
            "United States": "en-US",
            "United Kingdom": "en-GB", 
            "Indonesia": "id-ID",
            "China": "zh-CN",
            "Japan": "ja-JP",
            "Germany": "de-DE",
            "France": "fr-FR",
            "Spain": "es-ES",
            "Italy": "it-IT",
            "Brazil": "pt-BR",
            "Russia": "ru-RU",
            "India": "en-IN",
            "South Korea": "ko-KR",
            "Mexico": "es-MX",
            "Canada": "en-CA",
            "Australia": "en-AU",
            "Netherlands": "nl-NL",
            "Sweden": "sv-SE",
            "Norway": "no-NO",
            "Denmark": "da-DK",
            "Finland": "fi-FI",
            "Poland": "pl-PL",
            "Turkey": "tr-TR",
            "Thailand": "th-TH",
            "Vietnam": "vi-VN",
            "Malaysia": "ms-MY",
            "Singapore": "en-SG",
            "Philippines": "en-PH",
            "Egypt": "ar-EG",
            "South Africa": "en-ZA",
            "Nigeria": "en-NG",
            "Kenya": "en-KE",
            "Morocco": "ar-MA",
            "Algeria": "ar-DZ",
            "Tunisia": "ar-TN",
            "Ghana": "en-GH",
            "Ethiopia": "am-ET",
            "Uganda": "en-UG",
            "Tanzania": "sw-TZ",
            "Zimbabwe": "en-ZW",
            "Botswana": "en-BW",
            "Namibia": "en-NA",
            "Zambia": "en-ZM",
            "Malawi": "en-MW",
            "Mozambique": "pt-MZ",
            "Angola": "pt-AO",
            "Congo": "fr-CG",
            "Cameroon": "fr-CM",
            "Ivory Coast": "fr-CI",
            "Senegal": "fr-SN",
            "Mali": "fr-ML",
            "Burkina Faso": "fr-BF",
            "Niger": "fr-NE",
            "Chad": "ar-TD",
            "Sudan": "ar-SD",
            "Somalia": "so-SO",
            "Djibouti": "ar-DJ",
            "Eritrea": "ti-ER",
            "Libya": "ar-LY",
            "Central African Republic": "fr-CF",
            "Gabon": "fr-GA",
            "Equatorial Guinea": "es-GQ",
            "São Tomé and Príncipe": "pt-ST",
            "Cape Verde": "pt-CV",
            "Guinea-Bissau": "pt-GW",
            "Guinea": "fr-GN",
            "Sierra Leone": "en-SL",
            "Liberia": "en-LR",
            "Togo": "fr-TG",
            "Benin": "fr-BJ",
            "Mauritania": "ar-MR",
            "Western Sahara": "ar-EH",
            "Comoros": "ar-KM",
            "Madagascar": "mg-MG",
            "Mauritius": "en-MU",
            "Seychelles": "en-SC",
            "Réunion": "fr-RE",
            "Mayotte": "fr-YT",
            "Saint Helena": "en-SH",
            "Ascension Island": "en-AC",
            "Tristan da Cunha": "en-TA",
            "Falkland Islands": "en-FK",
            "South Georgia": "en-GS",
            "South Sandwich Islands": "en-GS",
            "Bouvet Island": "no-BV",
            "Heard Island": "en-HM",
            "McDonald Islands": "en-HM",
            "French Southern Territories": "fr-TF",
            "British Indian Ocean Territory": "en-IO",
            "Christmas Island": "en-CX",
            "Cocos Islands": "en-CC",
            "Norfolk Island": "en-NF",
            "Pitcairn Islands": "en-PN",
            "Tokelau": "en-TK",
            "Niue": "en-NU",
            "Cook Islands": "en-CK",
            "Wallis and Futuna": "fr-WF",
            "French Polynesia": "fr-PF",
            "New Caledonia": "fr-NC",
            "Vanuatu": "en-VU",
            "Solomon Islands": "en-SB",
            "Papua New Guinea": "en-PG",
            "Fiji": "en-FJ",
            "Tonga": "en-TO",
            "Samoa": "en-WS",
            "American Samoa": "en-AS",
            "Guam": "en-GU",
            "Northern Mariana Islands": "en-MP",
            "Micronesia": "en-FM",
            "Marshall Islands": "en-MH",
            "Palau": "en-PW",
            "Nauru": "en-NR",
            "Kiribati": "en-KI",
            "Tuvalu": "en-TV",
            "New Zealand": "en-NZ",
            "Iceland": "is-IS",
            "Norway": "no-NO",
            "Sweden": "sv-SE",
            "Finland": "fi-FI",
            "Denmark": "da-DK",
            "Estonia": "et-EE",
            "Latvia": "lv-LV",
            "Lithuania": "lt-LT",
            "Belarus": "be-BY",
            "Ukraine": "uk-UA",
            "Moldova": "ro-MD",
            "Romania": "ro-RO",
            "Bulgaria": "bg-BG",
            "Greece": "el-GR",
            "Albania": "sq-AL",
            "North Macedonia": "mk-MK",
            "Kosovo": "sq-XK",
            "Serbia": "sr-RS",
            "Montenegro": "sr-ME",
            "Bosnia and Herzegovina": "bs-BA",
            "Croatia": "hr-HR",
            "Slovenia": "sl-SI",
            "Hungary": "hu-HU",
            "Slovakia": "sk-SK",
            "Czech Republic": "cs-CZ",
            "Austria": "de-AT",
            "Switzerland": "de-CH",
            "Liechtenstein": "de-LI",
            "Luxembourg": "lb-LU",
            "Belgium": "nl-BE",
            "Ireland": "en-IE",
            "Portugal": "pt-PT",
            "Andorra": "ca-AD",
            "Monaco": "fr-MC",
            "San Marino": "it-SM",
            "Vatican City": "la-VA",
            "Malta": "mt-MT",
            "Cyprus": "el-CY",
            "Israel": "he-IL",
            "Palestine": "ar-PS",
            "Lebanon": "ar-LB",
            "Syria": "ar-SY",
            "Jordan": "ar-JO",
            "Iraq": "ar-IQ",
            "Kuwait": "ar-KW",
            "Saudi Arabia": "ar-SA",
            "Yemen": "ar-YE",
            "Oman": "ar-OM",
            "United Arab Emirates": "ar-AE",
            "Qatar": "ar-QA",
            "Bahrain": "ar-BH",
            "Iran": "fa-IR",
            "Afghanistan": "ps-AF",
            "Pakistan": "ur-PK",
            "Bangladesh": "bn-BD",
            "Sri Lanka": "si-LK",
            "Maldives": "dv-MV",
            "Nepal": "ne-NP",
            "Bhutan": "dz-BT",
            "Myanmar": "my-MM",
            "Laos": "lo-LA",
            "Cambodia": "km-KH",
            "Brunei": "ms-BN",
            "East Timor": "pt-TL",
            "Mongolia": "mn-MN",
            "Kazakhstan": "kk-KZ",
            "Uzbekistan": "uz-UZ",
            "Kyrgyzstan": "ky-KG",
            "Tajikistan": "tg-TJ",
            "Turkmenistan": "tk-TM",
            "Azerbaijan": "az-AZ",
            "Georgia": "ka-GE",
            "Armenia": "hy-AM"
        }
        
        language_preference = language_map.get(country, "en-US")
        
        # Randomize some parameters
        gender = random.choice(["Male", "Female", "Neutral"])
        age_min = random.randint(18, 45)
        age_max = random.randint(age_min + 5, 75)
        
        persona = Persona(
            name=name,
            goal_keywords=template["goal_keywords"].copy(),
            generic_keywords=template["generic_keywords"].copy(),
            navigation_depth=template["navigation_depth"],
            avg_time_per_page=template["avg_time_per_page"],
            gender=gender,
            age_range=(age_min, age_max),
            can_fill_forms=template["can_fill_forms"],
            scroll_probability=template["scroll_probability"],
            form_interaction_probability=template["form_interaction_probability"],
            country_preference=country,
            language_preference=language_preference
        )
        
        random_personas.append(persona)
    
    return random_personas
